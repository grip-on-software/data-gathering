# Stubs for svn.common (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from datetime import datetime
import svn.common_base
from collections import namedtuple
from typing import Any, Dict, Iterator, List, Optional, Union

_STATUS_ENTRY = namedtuple('_STATUS_ENTRY', ['name', 'type_raw_name', 'type', 'revision'])

class CommonClient(svn.common_base.CommonBase):
    def __init__(self, url_or_path: str, type_: Any, username: Optional[Any] = ..., password: Optional[Any] = ..., svn_filepath: str = ..., trust_cert: Optional[Any] = ..., env: Any = ..., *args: Any, **kwargs: Any) -> None: ...
    def run_command(self, subcommand: str, args: List[str], **kwargs: Any) -> Union[bytes, List[str]]: ...
    def info(self, rel_path: Optional[Any] = ..., revision: Optional[Any] = ...) -> Dict[str, Any]: ...
    def properties(self, rel_path: Optional[Any] = ...): ...
    def cat(self, rel_filepath: str, revision: Optional[Union[int, str]] = ...) -> bytes: ...
    def log_default(self, timestamp_from_dt: Optional[Any] = ..., timestamp_to_dt: Optional[Any] = ..., limit: Optional[int] = ..., rel_filepath: Optional[str] = ..., stop_on_copy: bool = ..., revision_from: Optional[Union[int, str]] = ..., revision_to: Optional[Union[int, str]] = ..., changelist: bool = ..., use_merge_history: bool = ...) -> Iterator: ...
    def export(self, to_path: Any, revision: Optional[Any] = ..., force: bool = ...) -> None: ...
    def status(self, rel_path: Optional[Any] = ...) -> None: ...
    def list(self, extended: bool = ..., rel_path: Optional[str] = ...) -> Iterator[Union[str, Dict[str, Union[int, str, datetime]]]]: ...
    def list_recursive(self, rel_path: Optional[Any] = ..., yield_dirs: bool = ..., path_filter_cb: Optional[Any] = ...) -> None: ...
    def diff_summary(self, old: Any, new: Any, rel_path: Optional[Any] = ...): ...
    def diff(self, old: Any, new: Any, rel_path: Optional[Any] = ...): ...
    @property
    def url(self) -> str: ...
    @property
    def path(self) -> str: ...
