# Stubs for hqlib.metric_source.issue_tracker.jira_filter (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from ..abstract.issue_tracker import BugTracker
from hqlib.typing import DateTime
from typing import Any, Callable, Dict, List, Optional, Sequence, Tuple, Union

QueryId = Union[int, str]

class JiraFilter(BugTracker):
    metric_source_name: str = ...
    def __init__(self, url: str, username: str, password: str, field_name: str=...) -> None: ...
    def nr_issues(self, *metric_source_ids: str) -> Tuple[int, List[str]]: ...
    def get_start_and_end_progress_date(self, issue: Dict) -> Tuple[Optional[DateTime], Optional[DateTime]]: ...
    def sum_for_all_issues(self, query_id: QueryId, func: Callable, total: object, *args: Any, **kwargs: Any) -> Any: ...
    def get_issue_url(self, issue_key: str) -> str: ...
    def nr_issues_with_field_empty(self, *metric_source_ids: str) -> Tuple[int, List[str]]: ...
    def issues_with_field(self, *metric_source_ids: str) -> List[Tuple[str, float]]: ...
    def issues_with_field_exceeding_value(self, *metric_source_ids: str, compare: Callable=..., limit_value: Any, extra_fields: Sequence[str]=...) -> List[Tuple]: ...
    def metric_source_urls(self, *metric_source_ids: str) -> List[str]: ...
