# Stubs for hqlib.metric.product.performance.performance_metrics (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .base_performance_metric import PerformanceMetricMixin
from hqlib import domain
from hqlib.typing import MetricParameters, MetricValue
from typing import Any

class PerformanceTestMetric(PerformanceMetricMixin, domain.LowerIsBetterMetric):
    target_value: int = ...
    level: str = ...
    unit: str = ...
    norm_template: str = ...
    template: str = ...
    @classmethod
    def norm_template_default_values(cls: Any) -> MetricParameters: ...
    def value(self) -> MetricValue: ...

class PerformanceLoadTestMetric(PerformanceTestMetric):
    unit: str = ...
    metric_source_class: Any = ...

class PerformanceLoadTestWarnings(PerformanceLoadTestMetric):
    name: str = ...
    level: str = ...
    low_target_value: int = ...

class PerformanceLoadTestErrors(PerformanceLoadTestMetric):
    name: str = ...
    level: str = ...
    low_target_value: int = ...

class PerformanceEnduranceTestMetric(PerformanceTestMetric):
    unit: str = ...
    metric_source_class: Any = ...

class PerformanceEnduranceTestWarnings(PerformanceEnduranceTestMetric):
    name: str = ...
    level: str = ...
    low_target_value: int = ...

class PerformanceEnduranceTestErrors(PerformanceEnduranceTestMetric):
    name: str = ...
    level: str = ...
    low_target_value: int = ...

class PerformanceScalabilityTestMetric(PerformanceTestMetric):
    unit: str = ...
    metric_source_class: Any = ...

class PerformanceScalabilityTestWarnings(PerformanceScalabilityTestMetric):
    name: str = ...
    level: str = ...
    low_target_value: int = ...

class PerformanceScalabilityTestErrors(PerformanceScalabilityTestMetric):
    name: str = ...
    level: str = ...
    low_target_value: int = ...
