# Stubs for owncloud.owncloud (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

class ResponseError(Exception):
    res: Any = ...
    status_code: int = ...
    def __init__(self, res: Any, errorType: Any) -> None: ...
    def get_resource_body(self): ...

class OCSResponseError(ResponseError):
    def __init__(self, res: Any) -> None: ...
    def get_resource_body(self): ...

class HTTPResponseError(ResponseError):
    def __init__(self, res: Any) -> None: ...

class ShareInfo:
    share_info: Any = ...
    share_id: Any = ...
    token: Any = ...
    def __init__(self, share_info: Any) -> None: ...
    def get_id(self): ...
    def get_share_type(self): ...
    def get_share_with(self): ...
    def get_share_with_displayname(self): ...
    def get_path(self): ...
    def get_permissions(self): ...
    def get_share_time(self): ...
    def get_expiration(self): ...
    def get_token(self): ...
    def get_link(self): ...
    def get_uid_owner(self): ...
    def get_displayname_owner(self): ...

class PublicShare(ShareInfo):
    share_id: Any = ...
    target_file: Any = ...
    link: Any = ...
    token: Any = ...
    def __init__(self, share_id: Any, target_file: Any, link: Any, token: Any) -> None: ...

class FileInfo:
    path: Any = ...
    name: Any = ...
    file_type: Any = ...
    attributes: Any = ...
    def __init__(self, path: Any, file_type: str = ..., attributes: Optional[Any] = ...) -> None: ...
    def get_name(self): ...
    def get_path(self): ...
    def get_size(self): ...
    def get_etag(self): ...
    def get_content_type(self): ...
    def get_last_modified(self): ...
    def is_dir(self): ...

class Client:
    OCS_BASEPATH: str = ...
    OCS_SERVICE_SHARE: str = ...
    OCS_SERVICE_PRIVATEDATA: str = ...
    OCS_SERVICE_CLOUD: str = ...
    OCS_PERMISSION_READ: int = ...
    OCS_PERMISSION_UPDATE: int = ...
    OCS_PERMISSION_CREATE: int = ...
    OCS_PERMISSION_DELETE: int = ...
    OCS_PERMISSION_SHARE: int = ...
    OCS_PERMISSION_ALL: int = ...
    OCS_SHARE_TYPE_USER: int = ...
    OCS_SHARE_TYPE_GROUP: int = ...
    OCS_SHARE_TYPE_LINK: int = ...
    OCS_SHARE_TYPE_REMOTE: int = ...
    url: Any = ...
    def __init__(self, url: Any, **kwargs: Any) -> None: ...
    def login(self, user_id: str, password: str) -> None: ...
    def logout(self): ...
    def file_info(self, path: Any): ...
    def list(self, path: Any, depth: int = ...): ...
    def get_file_contents(self, path: str) -> str: ...
    def get_file(self, remote_path: str, local_file: Optional[str] = ...) -> bool: ...
    def get_directory_as_zip(self, remote_path: str, local_file: str) -> bool: ...
    def put_file_contents(self, remote_path: Any, data: Any): ...
    def put_file(self, remote_path: str, local_source_file: str, **kwargs: Any) -> bool: ...
    def put_directory(self, target_path: str, local_directory: str, **kwargs: Any) -> bool: ...
    def mkdir(self, path: Any): ...
    def delete(self, path: Any): ...
    def list_open_remote_share(self): ...
    def accept_remote_share(self, share_id: Any): ...
    def decline_remote_share(self, share_id: Any): ...
    def delete_share(self, share_id: Any): ...
    def update_share(self, share_id: Any, **kwargs: Any): ...
    def move(self, remote_path_source: Any, remote_path_target: Any): ...
    def copy(self, remote_path_source: Any, remote_path_target: Any): ...
    def share_file_with_link(self, path: Any, **kwargs: Any): ...
    def is_shared(self, path: Any): ...
    def get_share(self, share_id: Any): ...
    def get_shares(self, path: str = ..., **kwargs: Any): ...
    def create_user(self, user_name: Any, initial_password: Any): ...
    def delete_user(self, user_name: Any): ...
    def user_exists(self, user_name: Any): ...
    def search_users(self, user_name: Any): ...
    def set_user_attribute(self, user_name: Any, key: Any, value: Any): ...
    def add_user_to_group(self, user_name: Any, group_name: Any): ...
    def get_user_groups(self, user_name: Any): ...
    def user_is_in_group(self, user_name: Any, group_name: Any): ...
    def get_user(self, user_name: Any): ...
    def remove_user_from_group(self, user_name: Any, group_name: Any): ...
    def add_user_to_subadmin_group(self, user_name: Any, group_name: Any): ...
    def get_user_subadmin_groups(self, user_name: Any): ...
    def user_is_in_subadmin_group(self, user_name: Any, group_name: Any): ...
    def share_file_with_user(self, path: Any, user: Any, **kwargs: Any): ...
    def create_group(self, group_name: Any): ...
    def delete_group(self, group_name: Any): ...
    def group_exists(self, group_name: Any): ...
    def share_file_with_group(self, path: Any, group: Any, **kwargs: Any): ...
    def get_config(self): ...
    def get_attribute(self, app: Optional[Any] = ..., key: Optional[Any] = ...): ...
    def set_attribute(self, app: Any, key: Any, value: Any): ...
    def delete_attribute(self, app: Any, key: Any): ...
    def get_apps(self): ...
    def get_version(self): ...
    def get_capabilities(self): ...
    def enable_app(self, appname: Any): ...
    def disable_app(self, appname: Any): ...
    def make_ocs_request(self, method: Any, service: Any, action: Any, **kwargs: Any): ...
