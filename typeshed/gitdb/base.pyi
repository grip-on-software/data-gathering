# Stubs for gitdb.base (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

class OInfo(tuple):
    def __new__(cls, sha: Any, type: Any, size: Any): ...
    def __init__(self, *args: Any) -> None: ...
    @property
    def binsha(self): ...
    @property
    def hexsha(self): ...
    @property
    def type(self): ...
    @property
    def type_id(self): ...
    @property
    def size(self): ...

class OPackInfo(tuple):
    def __new__(cls, packoffset: Any, type: Any, size: Any): ...
    def __init__(self, *args: Any) -> None: ...
    @property
    def pack_offset(self): ...
    @property
    def type(self): ...
    @property
    def type_id(self): ...
    @property
    def size(self): ...

class ODeltaPackInfo(OPackInfo):
    def __new__(cls, packoffset: Any, type: Any, size: Any, delta_info: Any): ...
    @property
    def delta_info(self): ...

class OStream(OInfo):
    def __new__(cls, sha: Any, type: Any, size: Any, stream: Any, *args: Any, **kwargs: Any): ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def read(self, size: int = ...) -> bytes: ...
    @property
    def stream(self): ...

class ODeltaStream(OStream):
    def __new__(cls, sha: Any, type: Any, size: Any, stream: Any, *args: Any, **kwargs: Any): ...
    @property
    def size(self): ...

class OPackStream(OPackInfo):
    def __new__(cls, packoffset: Any, type: Any, size: Any, stream: Any, *args: Any): ...
    def read(self, size: int = ...): ...
    @property
    def stream(self): ...

class ODeltaPackStream(ODeltaPackInfo):
    def __new__(cls, packoffset: Any, type: Any, size: Any, delta_info: Any, stream: Any): ...
    def read(self, size: int = ...): ...
    @property
    def stream(self): ...

class IStream(list):
    def __new__(cls, type: Any, size: Any, stream: Any, sha: Optional[Any] = ...): ...
    def __init__(self, type: Any, size: Any, stream: Any, sha: Optional[Any] = ...) -> None: ...
    @property
    def hexsha(self): ...
    error: Any = ...
    def read(self, size: int = ...): ...
    binsha: Any = ...
    type: Any = ...
    size: Any = ...
    stream: Any = ...

class InvalidOInfo(tuple):
    def __new__(cls, sha: Any, exc: Any): ...
    def __init__(self, sha: Any, exc: Any) -> None: ...
    @property
    def binsha(self): ...
    @property
    def hexsha(self): ...
    @property
    def error(self): ...

class InvalidOStream(InvalidOInfo): ...
