# Stubs for git.index.base (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import git.diff as diff
from git.exc import CheckoutError as CheckoutError
from git.objects.util import Serializable
from git.util import LazyMixin
from typing import Any, Optional

class IndexFile(LazyMixin, diff.Diffable, Serializable):
    S_IFGITLINK: Any = ...
    repo: Any = ...
    version: Any = ...
    def __init__(self, repo: Any, file_path: Optional[Any] = ...) -> None: ...
    @property
    def path(self): ...
    def write(self, file_path: Optional[Any] = ..., ignore_extension_data: bool = ...) -> None: ...
    def merge_tree(self, rhs: Any, base: Optional[Any] = ...): ...
    @classmethod
    def new(cls, repo: Any, *tree_sha: Any): ...
    @classmethod
    def from_tree(cls, repo: Any, *treeish: Any, **kwargs: Any): ...
    def iter_blobs(self, predicate: Any = ...): ...
    def unmerged_blobs(self): ...
    @classmethod
    def entry_key(cls, *entry: Any): ...
    def resolve_blobs(self, iter_blobs: Any): ...
    def update(self): ...
    def write_tree(self): ...
    def add(self, items: Any, force: bool = ..., fprogress: Any = ..., path_rewriter: Optional[Any] = ..., write: bool = ..., write_extension_data: bool = ...): ...
    def remove(self, items: Any, working_tree: bool = ..., **kwargs: Any): ...
    def move(self, items: Any, skip_errors: bool = ..., **kwargs: Any): ...
    def commit(self, message: Any, parent_commits: Optional[Any] = ..., head: bool = ..., author: Optional[Any] = ..., committer: Optional[Any] = ..., author_date: Optional[Any] = ..., commit_date: Optional[Any] = ..., skip_hooks: bool = ...): ...
    def checkout(self, paths: Optional[Any] = ..., force: bool = ..., fprogress: Any = ..., **kwargs: Any): ...
    entries: Any = ...
    def reset(self, commit: str = ..., working_tree: bool = ..., paths: Optional[Any] = ..., head: bool = ..., **kwargs: Any): ...
    def diff(self, other: Any = ..., paths: Optional[Any] = ..., create_patch: bool = ..., **kwargs: Any): ...
