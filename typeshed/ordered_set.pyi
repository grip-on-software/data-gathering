# Stubs for ordered_set (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from collections import MutableSet, Sequence
from typing import Any, Iterable, Optional

SLICE_ALL: Any

def is_iterable(obj: Any): ...

class OrderedSet(MutableSet, Sequence):
    items: Any = ...
    map: Any = ...
    def __init__(self, iterable: Optional[Iterable] = ...) -> None: ...
    def __len__(self): ...
    def __getitem__(self, index: Any) -> Any: ...
    def copy(self): ...
    def __contains__(self, key: Any) -> bool: ...
    def add(self, key: Any): ...
    append: Any = ...
    def update(self, sequence: Any): ...
    get_loc: Any = ...
    get_indexer: Any = ...
    def pop(self): ...
    def discard(self, key: Any) -> None: ...
    def clear(self) -> None: ...
    def __iter__(self): ...
    def __reversed__(self): ...
    def __eq__(self, other: Any): ...
    def union(self, *sets: Any) -> 'OrderedSet': ...
    def __and__(self, other: Any) -> 'OrderedSet': ...
    def intersection(self, *sets: Any) -> 'OrderedSet': ...
    def difference(self, *sets: Any) -> 'OrderedSet': ...
    def issubset(self, other: Any): ...
    def issuperset(self, other: Any): ...
    def symmetric_difference(self, other: Any) -> 'OrderedSet': ...
    def difference_update(self, *sets: Any) -> None: ...
    def intersection_update(self, other: Any) -> None: ...
    def symmetric_difference_update(self, other: Any) -> None: ...
