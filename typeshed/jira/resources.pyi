# Stubs for jira.resources (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import logging
from typing import Any, Optional

class NullHandler(logging.Handler):
    def emit(self, record: Any) -> None: ...

class Resource:
    JIRA_BASE_URL: str = ...
    raw: Any = ...
    def __init__(self, resource: Any, options: Any, session: Any, base_url: Any = ...) -> None: ...
    def __getattr__(self, item: Any): ...
    def find(self, id: Any, params: Optional[Any] = ...) -> None: ...
    def update(self, fields: Optional[Any] = ..., async_: Optional[Any] = ..., jira: Optional[Any] = ..., notify: bool = ..., **kwargs: Any) -> None: ...
    def delete(self, **kwargs: Any): ...

class Attachment(Resource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...
    def get(self): ...
    def iter_content(self, chunk_size: int = ...): ...

class Component(Resource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...
    def delete(self, **kwargs: Any) -> None: ...

class CustomFieldOption(Resource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...

class Dashboard(Resource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...

class Filter(Resource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...

class Issue(Resource):
    class _IssueFields:
        attachment: Any = ...
        description: Any = ...
        project: Any = ...
        comment: Any = ...
        issuelinks: Any = ...
        worklog: Any = ...
        def __init__(self) -> None: ...
    fields: Any = ...
    id: Any = ...
    key: Any = ...
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...
    def update(self, fields: Optional[Any] = ..., async_: Optional[Any] = ..., jira: Optional[Any] = ..., notify: bool = ..., **kwargs: Any) -> None: ...
    def add_field_value(self, field: Any, value: Any) -> None: ...
    def delete(self, **kwargs: Any) -> None: ...
    def permalink(self): ...
    def __eq__(self, other: Any): ...

class Comment(Resource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...
    def update(self, fields: Optional[Any] = ..., async_: Optional[Any] = ..., jira: Optional[Any] = ..., notify: bool = ..., **kwargs: Any) -> None: ...

class RemoteLink(Resource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...

class Votes(Resource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...

class Watchers(Resource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...
    def delete(self, **kwargs: Any) -> None: ...

class TimeTracking(Resource):
    remainingEstimate: Any = ...
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...

class Worklog(Resource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...
    def delete(self, **kwargs: Any) -> None: ...

class IssueLink(Resource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...

class IssueLinkType(Resource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...

class IssueType(Resource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...

class Priority(Resource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...

class Project(Resource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...

class Role(Resource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...
    def add_user(self, users: Optional[Any] = ..., groups: Optional[Any] = ...) -> None: ...

class Resolution(Resource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...

class SecurityLevel(Resource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...

class Status(Resource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...

class StatusCategory(Resource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...

class User(Resource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...
    def __hash__(self): ...
    def __eq__(self, other: Any): ...

class Group(Resource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...
    def __hash__(self): ...
    def __eq__(self, other: Any): ...

class Version(Resource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...
    def delete(self, **kwargs: Any): ...
    def __eq__(self, other: Any): ...

class GreenHopperResource(Resource):
    AGILE_BASE_URL: str = ...
    GREENHOPPER_REST_PATH: str = ...
    AGILE_EXPERIMENTAL_REST_PATH: str = ...
    AGILE_BASE_REST_PATH: str = ...
    self: Any = ...
    def __init__(self, path: Any, options: Any, session: Any, raw: Any) -> None: ...

class Sprint(GreenHopperResource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...
    def find(self, id: Any, params: Optional[Any] = ...) -> None: ...

class Board(GreenHopperResource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...
    def delete(self, **kwargs: Any) -> None: ...

class Customer(Resource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...

class ServiceDesk(Resource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...

class RequestType(Resource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...

class UnknownResource(Resource):
    def __init__(self, options: Any, session: Any, raw: Optional[Any] = ...) -> None: ...

class PropertyHolder:
    def __init__(self, raw: Any) -> None: ...
