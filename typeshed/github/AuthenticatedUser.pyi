# Stubs for github.AuthenticatedUser (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import github.Migration
from typing import Any, Optional

class AuthenticatedUser(github.GithubObject.CompletableGithubObject):
    @property
    def avatar_url(self): ...
    @property
    def bio(self): ...
    @property
    def blog(self): ...
    @property
    def collaborators(self): ...
    @property
    def company(self): ...
    @property
    def created_at(self): ...
    @property
    def disk_usage(self): ...
    @property
    def email(self): ...
    @property
    def events_url(self): ...
    @property
    def followers(self): ...
    @property
    def followers_url(self): ...
    @property
    def following(self): ...
    @property
    def following_url(self): ...
    @property
    def gists_url(self): ...
    @property
    def gravatar_id(self): ...
    @property
    def hireable(self): ...
    @property
    def html_url(self): ...
    @property
    def id(self): ...
    @property
    def location(self): ...
    @property
    def login(self): ...
    @property
    def name(self): ...
    @property
    def node_id(self): ...
    @property
    def organizations_url(self): ...
    @property
    def owned_private_repos(self): ...
    @property
    def plan(self): ...
    @property
    def private_gists(self): ...
    @property
    def public_gists(self): ...
    @property
    def public_repos(self): ...
    @property
    def received_events_url(self): ...
    @property
    def repos_url(self): ...
    @property
    def site_admin(self): ...
    @property
    def starred_url(self): ...
    @property
    def subscriptions_url(self): ...
    @property
    def total_private_repos(self): ...
    @property
    def type(self): ...
    @property
    def updated_at(self): ...
    @property
    def url(self): ...
    def add_to_emails(self, *emails: Any) -> None: ...
    def add_to_following(self, following: Any) -> None: ...
    def add_to_starred(self, starred: Any) -> None: ...
    def add_to_subscriptions(self, subscription: Any) -> None: ...
    def add_to_watched(self, watched: Any) -> None: ...
    def create_authorization(self, scopes: Any = ..., note: Any = ..., note_url: Any = ..., client_id: Any = ..., client_secret: Any = ..., onetime_password: Optional[Any] = ...): ...
    def create_fork(self, repo: Any): ...
    def create_gist(self, public: Any, files: Any, description: Any = ...): ...
    def create_key(self, title: Any, key: Any): ...
    def create_repo(self, name: Any, description: Any = ..., homepage: Any = ..., private: Any = ..., has_issues: Any = ..., has_wiki: Any = ..., has_downloads: Any = ..., has_projects: Any = ..., auto_init: Any = ..., license_template: Any = ..., gitignore_template: Any = ..., allow_squash_merge: Any = ..., allow_merge_commit: Any = ..., allow_rebase_merge: Any = ...): ...
    def edit(self, name: Any = ..., email: Any = ..., blog: Any = ..., company: Any = ..., location: Any = ..., hireable: Any = ..., bio: Any = ...) -> None: ...
    def get_authorization(self, id: Any): ...
    def get_authorizations(self): ...
    def get_emails(self): ...
    def get_events(self): ...
    def get_followers(self): ...
    def get_following(self): ...
    def get_gists(self, since: Any = ...): ...
    def get_issues(self, filter: Any = ..., state: Any = ..., labels: Any = ..., sort: Any = ..., direction: Any = ..., since: Any = ...): ...
    def get_user_issues(self, filter: Any = ..., state: Any = ..., labels: Any = ..., sort: Any = ..., direction: Any = ..., since: Any = ...): ...
    def get_key(self, id: Any): ...
    def get_keys(self): ...
    def get_notification(self, id: Any): ...
    def get_notifications(self, all: Any = ..., participating: Any = ..., since: Any = ..., before: Any = ...): ...
    def get_organization_events(self, org: Any): ...
    def get_orgs(self): ...
    def get_repo(self, name: Any): ...
    def get_repos(self, visibility: Any = ..., affiliation: Any = ..., type: Any = ..., sort: Any = ..., direction: Any = ...): ...
    def get_starred(self): ...
    def get_starred_gists(self): ...
    def get_subscriptions(self): ...
    def get_teams(self): ...
    def get_watched(self): ...
    def has_in_following(self, following: Any): ...
    def has_in_starred(self, starred: Any): ...
    def has_in_subscriptions(self, subscription: Any): ...
    def has_in_watched(self, watched: Any): ...
    def mark_notifications_as_read(self, last_read_at: Any = ...) -> None: ...
    def remove_from_emails(self, *emails: Any) -> None: ...
    def remove_from_following(self, following: Any) -> None: ...
    def remove_from_starred(self, starred: Any) -> None: ...
    def remove_from_subscriptions(self, subscription: Any) -> None: ...
    def remove_from_watched(self, watched: Any) -> None: ...
    def accept_invitation(self, invitation: Any) -> None: ...
    def get_invitations(self): ...
    def create_migration(self, repos: Any, lock_repositories: Any = ..., exclude_attachments: Any = ...): ...
    def get_migrations(self): ...
