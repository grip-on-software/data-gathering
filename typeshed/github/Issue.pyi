# Stubs for github.Issue (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from datetime import datetime
from .IssueComment import IssueComment
from .IssuePullRequest import IssuePullRequest
from .Label import Label
from .NamedUser import NamedUser
from .PaginatedList import PaginatedList
import github.Reaction
from typing import Any, List, Optional

class Issue(github.GithubObject.CompletableGithubObject):
    @property
    def assignee(self) -> NamedUser: ...
    @property
    def assignees(self): ...
    @property
    def body(self) -> str: ...
    @property
    def closed_at(self) -> Optional[datetime]: ...
    @property
    def closed_by(self) -> NamedUser: ...
    @property
    def comments(self): ...
    @property
    def comments_url(self): ...
    @property
    def created_at(self) -> datetime: ...
    @property
    def events_url(self): ...
    @property
    def html_url(self): ...
    @property
    def id(self): ...
    @property
    def labels(self) -> List[Label]: ...
    @property
    def labels_url(self): ...
    @property
    def milestone(self): ...
    @property
    def number(self) -> int: ...
    @property
    def pull_request(self) -> Optional[IssuePullRequest]: ...
    @property
    def repository(self): ...
    @property
    def state(self) -> str: ...
    @property
    def title(self) -> str: ...
    @property
    def updated_at(self) -> datetime: ...
    @property
    def url(self): ...
    @property
    def user(self) -> NamedUser: ...
    @property
    def locked(self): ...
    @property
    def active_lock_reason(self): ...
    def as_pull_request(self): ...
    def add_to_assignees(self, *assignees: Any) -> None: ...
    def add_to_labels(self, *labels: Any) -> None: ...
    def create_comment(self, body: Any): ...
    def delete_labels(self) -> None: ...
    def edit(self, title: Any = ..., body: Any = ..., assignee: Any = ..., state: Any = ..., milestone: Any = ..., labels: Any = ..., assignees: Any = ...) -> None: ...
    def lock(self, lock_reason: Any) -> None: ...
    def unlock(self) -> None: ...
    def get_comment(self, id: Any): ...
    def get_comments(self, since: datetime = ...) -> PaginatedList[IssueComment]: ...
    def get_events(self): ...
    def get_labels(self): ...
    def remove_from_assignees(self, *assignees: Any) -> None: ...
    def remove_from_labels(self, label: Any) -> None: ...
    def set_labels(self, *labels: Any) -> None: ...
    def get_reactions(self): ...
    def create_reaction(self, reaction_type: Any): ...
