# Stubs for github.PullRequest (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from datetime import datetime
from .IssueComment import IssueComment
from .GithubObject import CompletableGithubObject
from .NamedUser import NamedUser
from .PaginatedList import PaginatedList
from .PullRequestComment import PullRequestComment
from .PullRequestPart import PullRequestPart
from .PullRequestReview import PullRequestReview
from typing import Any, Optional

class PullRequest(CompletableGithubObject):
    @property
    def additions(self): ...
    @property
    def assignee(self) -> NamedUser: ...
    @property
    def assignees(self): ...
    @property
    def base(self) -> PullRequestPart: ...
    @property
    def body(self) -> str: ...
    @property
    def changed_files(self): ...
    @property
    def closed_at(self): ...
    @property
    def comments(self): ...
    @property
    def comments_url(self): ...
    @property
    def commits(self): ...
    @property
    def commits_url(self): ...
    @property
    def created_at(self) -> datetime: ...
    @property
    def deletions(self): ...
    @property
    def diff_url(self): ...
    @property
    def head(self) -> PullRequestPart: ...
    @property
    def html_url(self): ...
    @property
    def id(self): ...
    @property
    def issue_url(self): ...
    @property
    def labels(self): ...
    @property
    def merge_commit_sha(self): ...
    @property
    def mergeable(self): ...
    @property
    def mergeable_state(self): ...
    @property
    def merged(self) -> bool: ...
    @property
    def merged_at(self): ...
    @property
    def merged_by(self): ...
    @property
    def milestone(self): ...
    @property
    def number(self) -> int: ...
    @property
    def patch_url(self): ...
    @property
    def review_comment_url(self): ...
    @property
    def review_comments(self): ...
    @property
    def review_comments_url(self): ...
    @property
    def state(self) -> str: ...
    @property
    def title(self) -> str: ...
    @property
    def updated_at(self) -> datetime: ...
    @property
    def url(self): ...
    @property
    def user(self) -> NamedUser: ...
    def as_issue(self): ...
    def create_comment(self, body: Any, commit_id: Any, path: Any, position: Any): ...
    def create_review_comment(self, body: Any, commit_id: Any, path: Any, position: Any): ...
    def create_issue_comment(self, body: Any): ...
    def create_review(self, commit: Any = ..., body: Optional[Any] = ..., event: Any = ..., comments: Any = ...): ...
    def create_review_request(self, reviewers: Any = ..., team_reviewers: Any = ...) -> None: ...
    def delete_review_request(self, reviewers: Any = ..., team_reviewers: Any = ...) -> None: ...
    def edit(self, title: Any = ..., body: Any = ..., state: Any = ..., base: Any = ...) -> None: ...
    def get_comment(self, id: Any): ...
    def get_review_comment(self, id: Any): ...
    def get_comments(self): ...
    def get_review_comments(self, since: datetime = ...) -> PaginatedList[PullRequestComment]: ...
    def get_single_review_comments(self, id: Any): ...
    def get_commits(self): ...
    def get_files(self): ...
    def get_issue_comment(self, id: Any): ...
    def get_issue_comments(self) -> PaginatedList[IssueComment]: ...
    def get_issue_events(self): ...
    def get_review(self, id: Any): ...
    def get_reviews(self) -> PaginatedList[PullRequestReview]: ...
    def get_review_requests(self): ...
    def get_labels(self): ...
    def add_to_labels(self, *labels: Any) -> None: ...
    def delete_labels(self) -> None: ...
    def remove_from_labels(self, label: Any) -> None: ...
    def set_labels(self, *labels: Any) -> None: ...
    def is_merged(self): ...
    def merge(self, commit_message: Any = ..., commit_title: Any = ..., merge_method: Any = ..., sha: Any = ...): ...
