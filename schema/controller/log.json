{
    "$id": "https://gros.liacs.nl/schema/data-gathering/controller/log.json",
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "title": "Controller log request body fields",
    "$comment": "Format as generated by standard module logging HTTPHandler, with stringified url-encoded values. Where possible, integers/floats have proper types. Not truly JSON encoding, as some values may be `None` where `null` could have been proper.",
    "$ref": "#/$defs/log",
    "$defs": {
        "log": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "string",
                    "oneOf": [
                        {"pattern": "^\\(.*\\)$"},
                        {"pattern": "^{.+}$"},
                        {"const": "None"}
                    ],
                    "description": "Arguments provided for the log message."
                },
                "asctime": {
                    "type": "string",
                    "pattern": "^\\d\\d\\d\\d-\\d\\d-\\d\\d \\d\\d:\\d\\d:\\d\\d,\\d\\d\\d$",
                    "description": "Time when the log record was created."
                },
                "created": {
                    "type": "number",
                    "description": "Time when the log record was created."
                },
                "exc_info": {
                    "type": "string",
                    "oneOf": [
                        {"pattern": "^\\(.+\\)$"},
                        {"const": "None"}
                    ],
                    "description": "Exception information."
                },
                "exc_text": {
                    "type": "string",
                    "description": "Exception message."
                },
                "filename": {
                    "type": "string",
                    "description": "Name of the source file where the log was issued."
                },
                "funcName": {
                    "type": "string",
                    "description": "Name of the function containing the log issue."
                },
                "levelname": {
                    "type": "string",
                    "oneOf": [
                        {"enum": ["CRITICAL", "ERROR", "WARNING", "INFO", "DEBUG", "NOTSET"]},
                        {"pattern": "^Level .+$"}
                    ],
                    "description": "Textual logging level for the log message."
                },
                "levelno": {
                    "type": "integer",
                    "description": "Numeric logging level for the log message."
                },
                "lineno": {
                    "type": "integer",
                    "description": "Source line number where the log was issued."
                },
                "message": {
                    "type": "string",
                    "description": "Log message."
                },
                "module": {
                    "type": "string",
                    "description": "Module where the log was issued."
                },
                "msecs": {
                    "type": "number",
                    "description": "Millisecond portion of the time when the log was created."
                },
                "msg": {
                    "type": "string",
                    "description": "Format string for the log message."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the logger used to log the message."
                },
                "pathname": {
                    "type": "string",
                    "description": "Full path name of the source file where the log was issued."
                },
                "process": {
                    "oneOf": [
                        {"type": "integer"},
                        {"type": "string", "const": "None"}
                    ],
                    "description": "Identifier of the process where the log was issued."
                },
                "processName": {
                    "type": "string",
                    "description": "Name of the process where the log was issued. This is `None` if multiprocessing logging is unavailable and `MainProcess` if there is only one process."
                },
                "relativeCreated": {
                    "type": "number",
                    "description": "Time in milliseconds when the log was created, relative to the time the logging module was loaded."
                },
                "stack_info": {
                    "type": "string",
                    "description": "Stack frame information from the bottom of the stack in the thread, up to and including the stack frame of the log creation."
                },
                "thread": {
                    "oneOf": [
                        {"type": "integer"},
                        {"type": "string", "const": "None"}
                    ],
                    "description": "Identifier of the thread where the log was issued."
                },
                "threadName": {
                    "type": "string",
                    "description": "Name of the thread where the log was issued."
                }
            }
        }
    }
}
